(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{169:function(a,r,t){"use strict";t.r(r);var e=t(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,r=a.$createElement,t=a._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#array","aria-hidden":"true"}},[a._v("#")]),a._v(" Array")]),a._v(" "),t("h2",{attrs:{id:"子数组与前缀和"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子数组与前缀和","aria-hidden":"true"}},[a._v("#")]),a._v(" 子数组与前缀和")]),a._v(" "),t("h2",{attrs:{id:"两个排序数组的中位数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两个排序数组的中位数","aria-hidden":"true"}},[a._v("#")]),a._v(" 两个排序数组的中位数")]),a._v(" "),t("p",[a._v("这个题有三种做法：")]),a._v(" "),t("ol",[t("li",[a._v("基于 FindKth 的算法。整体思想类似于 median of unsorted array 可以用 find kth from unsorted array 的解题思路。")]),a._v(" "),t("li",[a._v("基于中点比较的算法。一头一尾各自丢掉一些，去掉一半的时候，整个问题的形式不变。可以推广到 median of k sorted arrays.")]),a._v(" "),t("li",[a._v("基于二分的方法。二分 median 的值，然后再用二分法看一下两个数组里有多少个数小于这个二分出来的值。")])])])}],!1,null,null,null);s.options.__file="array.md";r.default=s.exports}}]);